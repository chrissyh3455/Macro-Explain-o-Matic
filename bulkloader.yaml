# Autogenerated bulkloader.yaml file.
# You must edit this file before using it. TODO: Remove this line when done.
# At a minimum address the items marked with TODO:
#  * Fill in connector and connector_options
#  * Review the property_map.
#    - Ensure the 'external_name' matches the name of your CSV column,
#      XML tag, etc.
#    - Check that __key__ property is what you want. Its value will become
#      the key name on import, and on export the value will be the Key
#      object.  If you would like automatic key generation on import and
#      omitting the key on export, you can remove the entire __key__
#      property from the property map.

# If you have module(s) with your model classes, add them here. Also
# change the kind properties to model_class.
python_preamble:
- import: macro.data.appengine.wow
- import: base64
- import: re
- import: google.appengine.ext.bulkload.transform
- import: google.appengine.ext.bulkload.bulkloader_wizard
- import: google.appengine.ext.db
- import: google.appengine.api.datastore
- import: google.appengine.api.users

transformers:
- kind: WOWItem2
  connector: csv
  connector_options:
    skip_import_header_row: true
    column_list: [key, name, link, quality, iLevel, reqLevel, class, subclass, maxStack, equipSlot, texture, vendorPrice, id]
  property_map:
    # The name is the key for items.  Type str
    - property: __key__
      external_name: key
      import_transform: 'lambda x: x.lower()'
      export_transform: datastore.Key.name

    - property: name
      external_name: name
 
    - property: id
      external_name: id
      import_transform: 'int'
 
    - property: equipSlot
      external_name: equipSlot
      import_transform: 'lambda x: map(int, re.findall("\d+", x)) or [-1]'


- kind: WOWSpell2
  connector: csv
  connector_options:
    skip_import_header_row: true
    column_list: [key, id, name, rank, icon, powerCost, isFunnel, powerType, castingTime, minRange, maxRange]
  property_map:
    # The name is the key for items.  Type str
    - property: __key__
      external_name: key
      import_transform: 'lambda x: x.lower()'
      export_transform: datastore.Key.name

    - property: name
      external_name: name
 
    - property: id
      external_name: id
      import_transform: 'int'
 
    - property: rank
      external_name: rank
 
    - property: isFunnel
      external_name: isFunnel
      import_transform: 'lambda(x): True if x == "True" else False'
 
    - property: castingTime
      external_name: castingTime
      import_transform: 'int'

    - property: minRange
      external_name: minRange
      import_transform: 'int'

    - property: maxRange
      external_name: maxRange
      import_transform: 'int'





